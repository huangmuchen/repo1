server:
  port: 40400
  servlet:
    context-path: /auth
spring:
  application:
    name: xcEdu-auth
  redis:
    host: 192.168.222.131
    port: 6379
    timeout: 5000 #连接超时 毫秒
    jedis:
      pool:
        maxActive: 3
        maxIdle: 3
        minIdle: 1
        maxWait: -1 #连接池最大等行时间 -1没有限制
  datasource:
    druid:
      url: jdbc:mysql://localhost:3306/xc_user?characterEncoding=utf-8
      username: root
      password: 123
      driverClassName: com.mysql.jdbc.Driver # 可以省略，spring会自动识别
      initialSize: 5  #初始建立连接数量
      minIdle: 5  #最小连接数量
      maxActive: 20 #最大连接数量
      maxWait: 10000  #获取连接最大等待时间，毫秒
      testOnBorrow: true #申请连接时检测连接是否有效
      testOnReturn: false #归还连接时检测连接是否有效
      timeBetweenEvictionRunsMillis: 60000 #配置间隔检测连接是否有效的时间（单位是毫秒）
      minEvictableIdleTimeMillis: 300000  #连接在连接池的最小生存时间（毫秒）
xuecheng:
  auth:
    tokenValiditySeconds: 1200 # token存储到redis的过期时间，单位：秒
    clientId: XcWebApp
    clientSecret: XcWebApp
    cookieDomain: xuecheng.com
    cookieMaxAge: -1 # 浏览器关闭，cookie就删除
encrypt:
  key-store:
    location: classpath:/xc.keystore
    secret: xuechengkeystore
    alias: xckey
    password: xuecheng
eureka:
  client:
    service-url:
      defaultZone: http://localhost:50101/eureka/,http://localhost:50102/eureka/
    registry-fetch-interval-seconds: 5 # 拉取服务注册信息的间隔时间，单位s，默认为30秒
  instance:
    lease-renewal-interval-in-seconds: 5 # 5秒钟发送一次心跳
    lease-expiration-duration-in-seconds: 10 # 10秒不发送就过期
    prefer-ip-address: true # 当调用getHostname获取实例的hostname时，返回ip而不是host名称
    ip-address: 127.0.0.1 # 指定自己的ip信息，不指定的话会自己寻找
    instance-id: ${spring.application.name}:${server.port}
ribbon:
  MaxAutoRetries: 2 # 最大重试次数，当Eureka中可以找到服务，但是服务连不上时将会重试，如果eureka中找不到服务则直接走断路器
  MaxAutoRetriesNextServer: 3 # 切换实例的重试次数
  OkToRetryOnAllOperations: false  # 对所有操作请求都进行重试，如果是get则可以，如果是post，put等操作没有实现幂等的情况下是很危险的,所以设置为false
  ConnectTimeout: 5000  # 请求连接的超时时间
  ReadTimeout: 6000 # 请求处理的超时时间